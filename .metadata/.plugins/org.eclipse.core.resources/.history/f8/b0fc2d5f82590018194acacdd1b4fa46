package hr.fer.zemris.java.gui.charts;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;

import javax.swing.JComponent;

/**
 * @author Blaz Bagic
 * @version 1.0
 */
public class BarChartComponent extends JComponent {

  private int startX;
  private int screenWidth;
  private int startY;
  private int screenHeight;
  private final static int OFFSET = 20;

  /**
   * Default serial version UID.
   */
  private static final long serialVersionUID = 1L;
  /**
   * Reference to the {@link BarChart} object displayed by this component.
   */
  private BarChart chart;

  public BarChartComponent(BarChart chart) {
    super();
    this.chart = chart;
  }

  @Override
  protected void paintComponent(Graphics g) {
//    super.paintComponent(g);
    screenWidth = getWidth();
    screenHeight = getHeight();
    Graphics2D g2d = (Graphics2D) g;
    AffineTransform original = g2d.getTransform();
    AffineTransform at = new AffineTransform();
    at.rotate(-Math.PI / 2);
    g2d.setTransform(at);
    g2d.drawString(chart.getyInfo(), (startY - screenHeight) / 2, OFFSET);
    g2d.setTransform(original);
    
    int pointCount = (chart.getMaxY()-chart.getMinY())/chart.getSpacing();
    int unitY = screenHeight / pointCount;
    for (int i = chart.getMinY(); i <= chart.getMaxY(); i += chart.getSpacing()) {
      g2d.drawString(String.valueOf(i*chart.getSpacing()), 2 * OFFSET, screenHeight - 2 * OFFSET - i * unitY);
    }
    g2d.drawLine(3 * OFFSET, startY, 3 * OFFSET, screenHeight);
    g2d.drawString(chart.getxInfo(), screenWidth / 2, screenHeight - OFFSET);

  }

}
